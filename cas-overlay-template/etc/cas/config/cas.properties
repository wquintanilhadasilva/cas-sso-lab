##cas.server.name=https://localhost:8443
cas.server.name=http://localhost:80
cas.server.prefix=${cas.server.name}/cas
##server.ssl.key-store=file:/etc/cas/config/thekeystore
##server.ssl.key-store-password=changeit

logging.config=file:/etc/cas/config/log4j2.xml

cas.authn.accept.users=
cas.authn.jdbc.query[0].driver-class=org.postgresql.Driver
cas.authn.jdbc.query[0].url=jdbc:postgresql://localhost:15432/postgres
cas.authn.jdbc.query[0].dialect=org.hibernate.dialect.PostgreSQL95Dialect
cas.authn.jdbc.query[0].driver-class=org.postgresql.Driver
cas.authn.jdbc.query[0].user=postgres
cas.authn.jdbc.query[0].password=123456
cas.authn.jdbc.query[0].sql=SELECT * FROM users WHERE email = ?
cas.authn.jdbc.query[0].password-encoder.type=BCRYPT
cas.authn.jdbc.query[0].field-password=password
cas.authn.jdbc.query[0].field-expired=expired
cas.authn.jdbc.query[0].field-disabled=disabled
cas.authn.jdbc.query[0].principal-attribute-list=sn,cn:commonName,givenName,memberof,email,first_name,last_name,disabled

cas.service-registry.json.location=classpath:/services


##server.port=8081
server.ssl.enabled=false
##server.ssl.key-password=""
##server.ssl.key-store=""
##server.ssl.key-store-password=""

cas.server.tomcat.http.enabled=true
cas.server.tomcat.http.port=80
cas.server.tomcat.http.protocol=org.apache.coyote.http11.Http11NioProtocol

cas.jdbc.gen-ddl=true
cas.jdbc.show-sql=true


cas.authn.surrogate.separator=+
cas.authn.surrogate.tgt.timeToKillInSeconds=30
# cas.authn.surrogate.simple.surrogates.casuser=user1@test.com,abc@test.com

## UTILIZANDO DATABASE

cas.authn.surrogate.jdbc.user=postgres
cas.authn.surrogate.jdbc.password=123456
cas.authn.surrogate.jdbc.driver-class=org.postgresql.Driver
cas.authn.surrogate.jdbc.url=jdbc:postgresql://localhost:15432/postgres
# cas.authn.surrogate.jdbc.dialect=org.hibernate.dialect.PostgreSQL95Dialect

cas.authn.surrogate.jdbc.surrogate-search-query=SELECT COUNT(*) FROM surrogate WHERE  username = ? or surrogate_user= ? 
cas.authn.surrogate.jdbc.surrogate-account-query=SELECT surrogate_user AS surrogateAccount FROM surrogate WHERE username=?

cas.authn.surrogate.mail.attribute-name=mail

## cas.authn.surrogate.principal.principal-attribute=uid,sAMAccountName

## cas.authn.surrogate.principal.principal-attribute=uid
## cas.authn.surrogate.principal.return-null=false
## cas.authn.surrogate.principal.principal-resolution-failure-fatal=false
## cas.authn.surrogate.principal.use-existing-principal-id=false
## cas.authn.surrogate.principal.attribute-resolution-enabled=true


## cas.authn.surrogate.principal.active-attribute-repository-ids=StubRepository,etc

## cas.authn.surrogate.jdbc.fail-fast-timeout=1
## cas.authn.surrogate.jdbc.isolation-level-name=ISOLATION_READ_COMMITTED 
## cas.authn.surrogate.jdbc.health-query=
## cas.authn.surrogate.jdbc.isolate-internal-queries=false
## cas.authn.surrogate.jdbc.leak-threshold=10
## cas.authn.surrogate.jdbc.propagation-behaviorName=PROPAGATION_REQUIRED
## cas.authn.surrogate.jdbc.batchSize=1
## cas.authn.surrogate.jdbc.default-catalog=
## cas.authn.surrogate.jdbc.default-schema=
## cas.authn.surrogate.jdbc.ddl-auto=create-drop
## cas.authn.surrogate.jdbc.physical-naming-strategy-class-name=org.apereo.cas.hibernate.CasHibernatePhysicalNamingStrategy


## USANDO REST

# cas.authn.surrogate.rest.method=GET|POST
# cas.authn.surrogate.rest.order=0
# cas.authn.surrogate.rest.case-insensitive=false
# cas.authn.surrogate.rest.basic-auth-username=uid
# cas.authn.surrogate.rest.basic-auth-password=password
# cas.authn.surrogate.rest.headers.key=value
# cas.authn.surrogate.rest.url=http://rest.somewhere.org/attributes





# cas.authn.mfa.gauth.trusted-device-enabled=false
# cas.authn.mfa.gauth.multiple-device-registration-enabled=false

# cas.authn.mfa.gauth.name=
# cas.authn.mfa.gauth.order=


cas.authn.mfa.gauth.jpa.driver-class=org.postgresql.Driver
cas.authn.mfa.gauth.jpa.dialect=org.hibernate.dialect.PostgreSQL95Dialect
cas.authn.mfa.gauth.jpa.user=postgres
cas.authn.mfa.gauth.jpa.password=123456
cas.authn.mfa.gauth.jpa.url=jdbc:postgresql://localhost:15432/postgres


# cas.authn.mfa.globalProviderId=mfa-gauth
# cas.authn.mfa.globalFailureMode=CLOSED

cas.authn.mfa.gauth.core.issuer=TEST
cas.authn.mfa.gauth.core.codeDigits=6
cas.authn.mfa.gauth.core.timeStepSize=60
cas.authn.mfa.gauth.core.windowSize=3
cas.authn.mfa.gauth.core.label=TEST
# cas.authn.mfa.gauth.core.rank=0

cas.authn.mfa.gauth.cleaner.schedule.enabled=true
cas.authn.mfa.gauth.cleaner.schedule.startDelay=20000
cas.authn.mfa.gauth.cleaner.schedule.repeatInterval=60000

cas.authn.mfa.globalPrincipalAttributeNameTriggers=memberOf
cas.authn.mfa.globalPrincipalAttributeValueRegex=mfa-eligible

cas.authn.mfa.globalPrincipalAttributeNameTriggers=memberOf
cas.authn.mfa.globalPrincipalAttributeValueRegex=mfa-eligible|.*mfa-eligible.+


cas.authn.mfa.gauth.crypto.signing.key= globalPrincipalAttributePredicate
cas.authn.mfa.gauth.crypto.signing.keySize=256

# cas.authn.mfa.gauth.bypass.type=DEFAULT

cas.httpWebRequest.cors.enabled=true
cas.httpWebRequest.cors.allowCredentials=false
cas.httpWebRequest.cors.allowOrigins[0]=*
cas.httpWebRequest.cors.allowMethods[0]=*
cas.httpWebRequest.cors.allowHeaders[0]=*

#LDAP
cas.authn.ldap[0].baseDn: dc=eb,dc=mil,dc=br #${SSO_LDAP_BASEDN}
cas.authn.ldap[0].bindCredential: admin #${SSO_LDAP_BINDCREDENTIAL}
cas.authn.ldap[0].bindDn: cn=admin,dc=eb,dc=mil,dc=br  #${SSO_LDAP_BINDDN}
cas.authn.ldap[0].blockWaitTime: 5000
cas.authn.ldap[0].connectTimeout: 5000
cas.authn.ldap[0].dnFormat: uid=%s,dc=eb,dc=mil,dc=br #${SSO_LDAP_DNFORMAT}
cas.authn.ldap[0].idleTime: 5000
cas.authn.ldap[0].ldapUrl: ldap://localhost:8389 #${SSO_LDAP_URL}
cas.authn.ldap[0].maxPoolSize: 20
cas.authn.ldap[0].minPoolSize: 1
cas.authn.ldap[0].passwordEncoder.type: NONE
cas.authn.ldap[0].passwordPolicy.enabled: false
cas.authn.ldap[0].poolPassivator: CLOSE
cas.authn.ldap[0].principalAttributeId: givenName #${SSO_LDAP_PRINCIPALATTRIBUTEID}
cas.authn.ldap[0].principalAttributeList: mail, uid, sn, cn, initials, company, givenName, displayName
cas.authn.ldap[0].principalAttributePassword: userPassword #${SSO_LDAP_PRINCIPALATTRIBUTEPASSWORD}
cas.authn.ldap[0].prunePeriod: 5000
cas.authn.ldap[0].searchFilter: uid={user} #${SSO_LDAP_USERFILTER}
cas.authn.ldap[0].subtreeSearch: true
cas.authn.ldap[0].type: DIRECT #${SSO_LDAP_TYPE}
cas.authn.ldap[0].useSsl: false
cas.authn.ldap[0].useStartTls: false
cas.authn.ldap[0].validateOnCheckout: true
cas.authn.ldap[0].validatePeriod: 600
cas.authn.ldap[0].validatePeriodically: true